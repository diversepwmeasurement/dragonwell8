jobs:
  linux_aarch64_debug_build:
    name: Linux aarch64(fastdebug)
    needs: prerequisites
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Update apt and download dependency
      run: 'sudo apt update -y

        sudo apt install -y libxtst-dev libxt-dev libxrender-dev libxrandr-dev libxi-dev
        libcups2-dev libfontconfig1-dev libasound2-dev unzip zip openjdk-8-jdk

        '
    - continue-on-error: true
      name: Get boot jdk
      run: "if [ ! -f /home/${USER}/dragonwell8/dragonwell-8.15.16/bin/java ];then\n\
        \  mkdir -p /home/${USER}/dragonwell8\n  rm -rf /home/${USER}/dragonwell8/*\
        \ /home/${USER}/dragonwell8.tar.gz\n  wget https://dragonwell.oss-cn-shanghai.aliyuncs.com/8.15.16/Alibaba_Dragonwell_Extended_8.15.16_aarch64_linux.tar.gz\
        \ -O /home/${USER}/dragonwell8.tar.gz\n  tar zxf /home/${USER}/dragonwell8.tar.gz\
        \ -C /home/${USER}/dragonwell8\nfi\n"
    - continue-on-error: true
      name: Checkout target source
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - continue-on-error: true
      name: Compile debug
      run: 'sh configure --with-debug-level=fastdebug --with-cacerts-file=${PWD}/common/security/cacerts
        --with-milestone=fcs --enable-unlimited-crypto --with-boot-jdk=/home/${USER}/dragonwell8/dragonwell-8.15.16

        make images CONF=linux-aarch64-normal-server-fastdebug

        '
  linux_aarch64_release_build:
    name: Linux aarch64(release)
    needs: prerequisites
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Update apt and download dependency
      run: 'sudo apt update -y

        sudo apt install -y libxtst-dev libxt-dev libxrender-dev libxrandr-dev libxi-dev
        libcups2-dev libfontconfig1-dev libasound2-dev unzip zip openjdk-8-jdk

        '
    - continue-on-error: true
      name: Get boot jdk
      run: "if [ ! -f /home/${USER}/dragonwell8/dragonwell-8.15.16/bin/java ];then\n\
        \  mkdir -p /home/${USER}/dragonwell8\n  rm -rf /home/${USER}/dragonwell8/*\
        \ /home/${USER}/dragonwell8.tar.gz\n  wget https://dragonwell.oss-cn-shanghai.aliyuncs.com/8.15.16/Alibaba_Dragonwell_Extended_8.15.16_aarch64_linux.tar.gz\
        \ -O /home/${USER}/dragonwell8.tar.gz\n  tar zxf /home/${USER}/dragonwell8.tar.gz\
        \ -C /home/${USER}/dragonwell8\nfi\n"
    - continue-on-error: true
      name: Checkout target source
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - continue-on-error: true
      name: Compile release
      run: 'sh configure --with-debug-level=release --with-cacerts-file=${PWD}/common/security/cacerts
        --with-milestone=fcs --enable-unlimited-crypto --with-boot-jdk=/home/${USER}/dragonwell8/dragonwell-8.15.16

        make images CONF=linux-aarch64-normal-server-release

        '
    - continue-on-error: true
      name: Install dependencies
      run: 'wget https://dlcdn.apache.org/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz

        tar -xvf apache-maven-3.8.8-bin.tar.gz

        '
    - continue-on-error: true
      name: Download serverless-adapter-jdk8 source code
      uses: actions/checkout@v3
      with:
        path: serverless-adapter-jdk8
        ref: main
        repository: dragonwell-project/serverless-adapter-jdk8
    - continue-on-error: true
      name: Build serverless-adapter-jdk8
      run: 'export JAVA_HOME=../build/linux-aarch64-normal-server-release/images/j2sdk-image

        ../apache-maven-3.8.8/bin/mvn package

        mkdir -p ../build/linux-aarch64-normal-server-release/images/j2sdk-image/jre/lib/aarch64/serverless

        cp -f target/serverless-adapter-0.1.jar ../build/linux-aarch64-normal-server-release/images/j2sdk-image/jre/lib/aarch64/serverless/serverless-adapter.jar

        cp -f output/libloadclassagent.so ../build/linux-aarch64-normal-server-release/images/j2sdk-image/jre/lib/aarch64/serverless/

        ../build/linux-aarch64-normal-server-release/images/j2sdk-image/bin/java -version

        '
      working-directory: serverless-adapter-jdk8
    - continue-on-error: true
      name: Upload Test image
      uses: actions/upload-artifact@v2
      with:
        name: dragonwell8_aarch64_release_image_${{ needs.prerequisites.outputs.bundle_id
          }}
        path: 'build/linux-aarch64-normal-server-release/images/j2sdk-image

          '
  linux_aarch64_test:
    name: Linux aarch64 Test
    needs:
    - prerequisites
    - linux_aarch64_release_build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout target source
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - continue-on-error: true
      name: Clear Dragonwell8 Dir
      run: 'rm -rf /opt/dragonwell8

        '
    - continue-on-error: true
      id: jtreg_restore
      name: Download image
      uses: actions/download-artifact@v2
      with:
        name: dragonwell8_aarch64_release_image_${{ needs.prerequisites.outputs.bundle_id
          }}
        path: /opt/dragonwell8
    - continue-on-error: true
      name: Test image version
      run: 'ls /opt/dragonwell8

        chmod -R 777 /opt/dragonwell8

        /opt/dragonwell8/bin/java -version

        '
    - continue-on-error: true
      name: Get jtreg image
      run: "if [ ! -f /home/${USER}/jtreg/bin/jtreg ];then\n  wget https://compiler-ci-bucket.oss-cn-hangzhou.aliyuncs.com/tools/jtreg_5_1_b01.zip\
        \ -O /home/${USER}/jtreg_5_1_b01.zip\n  cd /home/${USER}\n  sudo apt update\
        \ -y\n  sudo apt install -y unzip\n  unzip jtreg_5_1_b01.zip\nfi\n"
    - continue-on-error: true
      name: Test
      run: '/home/${USER}/jtreg/bin/jtreg -agentvm -a -ea -esa -v:fail,error,time,nopass
        -jdk:/opt/dragonwell8 -exclude:"/home/${USER}/actions-runner/_work/dragonwell8/dragonwell8/hotspot/test/ProblemList.txt"
        -exclude:"/home/${USER}/actions-runner/_work/dragonwell8/dragonwell8/jdk/test/ProblemList.txt"
        "${{ matrix.test }}"

        '
    - continue-on-error: true
      name: Check that all tests executed successfully
      run: "if [ -n \"$(cat /home/${USER}/actions-runner/_work/dragonwell8/dragonwell8/JTreport/text/stats.txt\
        \ | grep -E 'failed|error')\" ]; then\n  cat /home/${USER}/actions-runner/_work/dragonwell8/dragonwell8/JTreport/newfailures.txt\
        \ /home/${USER}/actions-runner/_work/dragonwell8/dragonwell8/JTreport/other_errors.txt;\n\
        \  exit 1 ;\nfi\n"
    strategy:
      fail-fast: false
      matrix:
        test:
        - jdk/test/:jdk_tier1
        - jdk/test/:dragonwell_jdk_features
        - hotspot/test/:hotspot_tier1
        - hotspot/test/:hotspot_jwarmup
        - hotspot/test/:hotspot_elastic_heap
  linux_x64_build:
    container:
      image: docker.io/dragonwelljdk/build_jdk:8u
    name: Linux x64
    needs: prerequisites
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout target source
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - continue-on-error: true
      name: Compile debug
      run: 'sh configure --with-debug-level=fastdebug --with-cacerts-file=${PWD}/common/security/cacerts
        --with-milestone=fcs --enable-unlimited-crypto

        make images CONF=linux-x86_64-normal-server-fastdebug

        '
    - continue-on-error: true
      name: Compile release
      run: 'make clean || true

        [ -d build ] && rm -rf build

        sh configure --with-debug-level=release --with-cacerts-file=${PWD}/common/security/cacerts
        --with-milestone=fcs --enable-unlimited-crypto

        make images CONF=linux-x86_64-normal-server-release

        '
    - continue-on-error: true
      name: Install dependencies
      run: 'wget https://dlcdn.apache.org/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz

        tar -xvf apache-maven-3.8.8-bin.tar.gz

        '
    - continue-on-error: true
      name: Download serverless-adapter-jdk8 source code
      uses: actions/checkout@v3
      with:
        path: serverless-adapter-jdk8
        ref: main
        repository: dragonwell-project/serverless-adapter-jdk8
    - continue-on-error: true
      name: Build serverless-adapter-jdk8
      run: 'export JAVA_HOME=../build/linux-x86_64-normal-server-release/images/j2sdk-image

        ../apache-maven-3.8.8/bin/mvn package

        mkdir -p ../build/linux-x86_64-normal-server-release/images/j2sdk-image/jre/lib/amd64/serverless

        cp -f target/serverless-adapter-0.1.jar ../build/linux-x86_64-normal-server-release/images/j2sdk-image/jre/lib/amd64/serverless/serverless-adapter.jar

        cp -f output/libloadclassagent.so ../build/linux-x86_64-normal-server-release/images/j2sdk-image/jre/lib/amd64/serverless/

        '
      working-directory: serverless-adapter-jdk8
    - continue-on-error: true
      name: Upload Test image
      uses: actions/upload-artifact@v2
      with:
        name: dragonwell8_x86_release_image_${{ needs.prerequisites.outputs.bundle_id
          }}
        path: 'build/linux-x86_64-normal-server-release/images/j2sdk-image

          '
  linux_x64_test:
    container:
      image: docker.io/dragonwelljdk/build_jdk:8u
    name: Linux x64 Test
    needs:
    - prerequisites
    - linux_x64_build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout target source
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - continue-on-error: true
      name: Clear Dragonwell8 Dir
      run: 'rm -rf /opt/dragonwell8

        '
    - continue-on-error: true
      id: jtreg_restore
      name: Download image
      uses: actions/download-artifact@v2
      with:
        name: dragonwell8_x86_release_image_${{ needs.prerequisites.outputs.bundle_id
          }}
        path: /opt/dragonwell8
    - continue-on-error: true
      name: Test image version
      run: 'ls /opt/dragonwell8

        chmod -R 777 /opt/dragonwell8

        /opt/dragonwell8/bin/java -version

        '
    - continue-on-error: true
      name: Test
      run: 'jtreg -agentvm -a -ea -esa -v:fail,error,time,nopass -jdk:/opt/dragonwell8
        -exclude:"/__w/dragonwell8/dragonwell8/hotspot/test/ProblemList.txt" -exclude:"/__w/dragonwell8/dragonwell8/jdk/test/ProblemList.txt"
        "${{ matrix.test }}"

        '
    - continue-on-error: true
      name: Check that all tests executed successfully
      run: "if [[ egrep -q \"(failed|error)\" /__w/dragonwell8/dragonwell8/JTreport/text/stats.txt\
        \ ]]; then\n  cat /__w/dragonwell8/dragonwell8/JTreport/newfailures.txt /__w/dragonwell8/dragonwell8/JTreport/other_errors.txt;\n\
        \  exit 1 ;\nfi\n"
    strategy:
      fail-fast: false
      matrix:
        test:
        - jdk/test/:jdk_tier1
        - jdk/test/:dragonwell_jdk_features
        - hotspot/test/:hotspot_tier1
        - hotspot/test/:hotspot_jwarmup
        - hotspot/test/:hotspot_elastic_heap
        - hotspot/test/:hotspot_multi_tenant
  prerequisites:
    name: Prerequisites
    outputs:
      bundle_id: ${{ steps.check_bundle_id.outputs.bundle_id }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: check_bundle_id
      name: Determine unique bundle identifier
      run: echo "::set-output name=bundle_id::${GITHUB_ACTOR}_${GITHUB_SHA:0:8}"
name: Dragonwell_8_build_test
on:
  repository_dispatch:
    types: trigger-ga___submit.yml
